syntax = "proto3";

package dcrticketmatcher;

service SplitTicketMatcherService {
    rpc FindMatches (FindMatchesRequest) returns (FindMatchesResponse);
    rpc GenerateTicket (GenerateTicketRequest) returns (GenerateTicketResponse);
    rpc PublishTicket (PublishTicketRequest) returns (PublishTicketResponse);
    rpc Status (StatusRequest) returns (StatusResponse);
}

message TxOut {
    uint64 value = 1;
    bytes script = 2;
}

message FindMatchesRequest {
    uint64 amount = 1;
}

message FindMatchesResponse {
    int32 session_id = 1;
    uint64 amount = 2;
    uint64 fee = 3;
}

message GenerateTicketRequest {
    int32 session_id = 1;
    TxOut commitment_output = 2;
    TxOut change_output = 3;
    string vote_address = 4;
}

message GenerateTicketResponse {
    bytes transaction = 1;
    int32 output_index = 2;
}

message PublishTicketRequest {
    int32 session_id = 1;
    bytes split_tx = 2;
    int32 split_tx_output_index = 3;
    bytes ticket_input_scriptsig = 4;
}

message PublishTicketResponse {
    bytes ticket_tx = 1;
}

message StatusRequest { }
message StatusResponse {
    uint64 ticket_price = 1;
}
